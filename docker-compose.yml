version: '3.8'

services:
  # PATH Gateway Service
  path:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    container_name: path-gateway
    ports:
      - "8081:8080"  # Main API port
      - "9090:9090"  # Metrics port
      - "6060:6060"  # Pprof port
    volumes:
      - ./config:/app/config:ro
    command: ["./path", "-config", "/app/config/.config.yaml"]
    environment:
      - CONFIG_PATH=/app/config/.config.yaml
    depends_on:
      - prometheus
      - grafana
    networks:
      - path-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: path-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./local/observability/prometheus-stack.yaml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - path-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.3
    container_name: path-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./local/observability/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./local/observability/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - path-network
    restart: unless-stopped

  # Loki for log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: path-loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./local/observability/loki-config.yaml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - path-network
    restart: unless-stopped

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: path-promtail
    volumes:
      - /var/log:/var/log
      - ./local/observability/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - path-network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  path-network:
    driver: bridge 